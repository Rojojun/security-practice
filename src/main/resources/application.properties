server.port=8080

# H2 Setting
spring.h2.console.enabled=true
spring.datasource.url=jdbc:h2:mem:testdb

spring.datasource.driver-class-name=org.h2.Driver

#Create : ??????? ??
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.show-sql=true

spring.output.ansi.enabled=always

spring.mvc.pathmatch.matching-strategy=ant_path_matcher

spring.thymeleaf.cache=false
spring.thymeleaf.check-template-location=true
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html

# Google
spring.security.oauth2.client.registration.google.client-id = 735403426585-hm3pjh3bgrmo2rkrgs2k2l14ge8o1j8j.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret = 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
spring.security.oauth2.client.registration.google.scope = profile, email

# Facebook
spring.security.oauth2.client.registration.facebook.client-id = 472367861624295
spring.security.oauth2.client.registration.facebook.client-secret = cb449ce0f70dc5c3f1427e595857f44a
spring.security.oauth2.client.registration.facebook.scope = public_profile, email

# Naver
spring.security.oauth2.client.registration.naver.client-id = XYybEUoyjBgTynK02KKY
spring.security.oauth2.client.registration.naver.client-secret= = 9AOFmG0cLS
spring.security.oauth2.client.registration.naver.scope = name, emmail
spring.security.oauth2.client.registration.naver.client-name = Naver
spring.security.oauth2.client.registration.naver.authorization-grant-type = authorization_code
spring.security.oauth2.client.registration.naver.redirect-uri = http://localhost:8080/login/oauth2/code/naver